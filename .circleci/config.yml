version: 2
jobs:
  api_build:
    docker:
      - image: circleci/golang:1.12.7
    working_directory: /go/src/github.com/ariel17/efimeral
    steps:
      - checkout
      - run: cd api && make api-build
      - store_artifacts:
          path: ./api/api
      - persist_to_workspace:
          root: api
          paths:
            - api

  api_image:
    machine: true
    steps:
      - checkout
      - run: echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
      - attach_workspace:
          at: /tmp/workspace
      - run: cp /tmp/workspace/api ./api
      - run: cd api && make image-push

  docs_build:
    docker:
      - image: circleci/node:12.6.0
    steps:
      - checkout
      - run: cd docs && make docs-build
      - store_artifacts:
          path: ./docs/index.html
      - persist_to_workspace:
          root: docs
          paths:
            - index.html

  docs_image:
    machine: true
    steps:
      - checkout
      - run: echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
      - attach_workspace:
          at: /tmp/workspace
      - run: cp /tmp/workspace/index.html ./docs
      - run: cd docs && make image-push

  web_build:
    docker:
      - image: circleci/node:12.6.0
    steps:
      - checkout
      - run: git config --global user.email "ariel.gerardo.rios@gmail.com"
      - run: git config --global user.name "Ariel Gerardo RÃ­os"
      - run: cd web && make build
      - store_artifacts:
          path: ./web/build
      - persist_to_workspace:
          root: web
          paths:
            - build

  web_image:
    machine: true
    steps:
      - checkout
      - run: echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
      - attach_workspace:
          at: /tmp/workspace
      - run: cp -r /tmp/workspace/build ./web
      - run: cd web && make image-push

  nginx_image:
    machine: true
    steps:
      - checkout
      - run: echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
      - run: cd nginx && make

workflows:
  version: 2
  api:
    jobs:
      - api_build
      - api_image:
          requires:
            - api_build
          filters:
            branches:
              only: master
  docs:
    jobs:
      - docs_build
      - docs_image:
          requires:
            - docs_build
          filters:
            branches:
              only: master
  web:
    jobs:
      - web_build
      - web_image:
          requires:
            - web_build
          filters:
            branches:
              only: master
  nginx:
    jobs:
      - nginx_image:
          filters:
            branches:
              only: master
